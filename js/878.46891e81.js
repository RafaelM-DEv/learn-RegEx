"use strict";(self["webpackChunkregexp"]=self["webpackChunkregexp"]||[]).push([[878],{8878:(e,a,t)=>{t.r(a),t.d(a,{default:()=>aa});t(7280);var l=t(3673),o=t(2323);const s=(0,l.Wm)("h1",null,"RegEx",-1),n=(0,l.Wm)("h4",null,"O que é uma expressão regular?",-1),r=(0,l.Wm)("div",null,"Uma expressão regular é um método formal de se especificar um padrão de texto.",-1),m=(0,l.Wm)("div",null,"Com ela podemos lidar com as seguintes situações:",-1),i=(0,l.Wm)("ul",null,[(0,l.Wm)("li",null,"procura"),(0,l.Wm)("li",null,"substituição"),(0,l.Wm)("li",null,"validação de formatos"),(0,l.Wm)("li",null,"filtragem de informações")],-1),u={class:"column text-white"},d=(0,l.Wm)("h5",null,"Criando nossas primeiras RegEx",-1),c=(0,l.Wm)("p",null,"Usando javascript podemos optar por duas formas de se criar uma regex.",-1),p=(0,l.Wm)("p",null,[(0,l.Uk)("Podemos criar usando um "),(0,l.Wm)("strong",null,"constructor"),(0,l.Uk)(" :")],-1),g=(0,l.Wm)("div",{class:"bg-grey-3 q-pa-sm q-mb-md text-black"}," const regex = new RegExp ('dog', 'gi') ",-1),b=(0,l.Wm)("p",null,[(0,l.Uk)("Ou criando de forma "),(0,l.Wm)("strong",null,"literal"),(0,l.Uk)(" :")],-1),h=(0,l.Wm)("div",{class:"bg-grey-3 q-pa-sm q-mb-md text-black"}," const regex = /dog/gi ",-1),x=(0,l.Wm)("p",null,"Exemplo prático:",-1),W=(0,l.Wm)("p",null,"Buscando apenas uma letra.(escreva uma palavra ou a letra que buscamos)",-1),f={class:"q-mt-sm"},v=(0,l.Wm)("p",null,[(0,l.Uk)('Perceba que se tentar digitar "A" maiúsculo não terá o match, isso é porque temos case sensitive em nossas regex, para termos controle sobre isso usamos a flag '),(0,l.Wm)("strong",null,'"i"'),(0,l.Uk)(". Vamos ver isso logo em seguida.")],-1),w=(0,l.Wm)("h5",null,"Flags",-1),q=(0,l.Wm)("p",null,"Elas adicionam comportamentos adicionais a nossas regras, como:",-1),V=(0,l.Wm)("ul",null,[(0,l.Wm)("li",null,"g - Achar todas as ocorrências da regex"),(0,l.Wm)("li",null,"i - ignora case sensitive"),(0,l.Wm)("li",null,"m - multilinha, lida com caracrteres de inicio e fim (^ e $) ao operar em múltiplas linhas")],-1),y=(0,l.Wm)("p",null,"Exemplo prático:",-1),A=(0,l.Wm)("div",{class:"bg-grey-3 q-pa-sm q-mb-md text-black"}," const regex = /dog/g ",-1),U={class:"row no-wrap q-gutter-x-sm"},k={class:"q-mt-sm"},j=(0,l.Wm)("h5",null,'Operador pipe "|"',-1),P=(0,l.Wm)("p",null,'Algumas vezes precisamos dar match em mais de um termo, para isso usamos o operador pipe "|" ',-1),M=(0,l.Wm)("p",null,[(0,l.Uk)(" Ele funciona basicamente como nosso operador lógico "),(0,l.Wm)("strong",null,"OR"),(0,l.Uk)(' "| |" .')],-1),Q=(0,l.Wm)("p",null,"Exemplo prático:",-1),T={class:"q-mt-sm"},E=(0,l.Wm)("h5",null,'Conjuntos " [ ] "',-1),z=(0,l.Wm)("p",null,"Com os conjuntos dizemos a regex que uma determinada casa pode ter diversos valores.",-1),F=(0,l.Wm)("p",null,"Uma funcionalidade interessante é de adicionar range (invervalos) dentro dos nossos conjuntos.",-1),G=(0,l.Wm)("p",null,"Podemos determinar um conjunto de match em letras que vão de A à Z ou pegue qualquer digito (0 à 9).",-1),I=(0,l.Wm)("div",{class:"bg-grey-3 q-pa-sm q-mb-md text-black"}," const regex = /[a-z]/g ",-1),L=(0,l.Wm)("p",null,"Exemplo prático:",-1),C={class:"row no-wrap q-gutter-x-sm"},R={class:"q-mt-sm"},_=(0,l.Wm)("h5",null,"Metacaracteres",-1),O=(0,l.Wm)("p",null,"Um metacaractere bastante recorrente é o ponto . , ele funciona como um coringa, sendo capaz de dar match em qualquer caractere.",-1),S=(0,l.Wm)("div",{class:"bg-grey-3 q-pa-sm q-mb-md text-black"}," const regex = /cas./gi ",-1),Z=(0,l.Wm)("p",null,[(0,l.Uk)("Se desejar pegar a forma literal do caractere basta usar o "),(0,l.Wm)("strong",null,"escape"),(0,l.Uk)(' "\\"')],-1),$=(0,l.Wm)("div",{class:"bg-grey-3 q-pa-sm q-mb-md text-black"}," const regex = /[a\\-o]/gi ",-1),B=(0,l.Wm)("p",null,"Exemplo prático:",-1),D={class:"row no-wrap q-gutter-x-sm"},J={class:"q-mt-sm"},H=(0,l.Wm)("h5",null,"shorthands",-1),K=(0,l.Wm)("p",null,"Para simplificar a escrita e leitura das regex, possuímos algumas shorthands que são extremamente úteis para deixar ainda mais claro nosso código.",-1),N=(0,l.Wm)("p",null,"Veja como podemos escrever esse conjunto [0-9] para \\d ,[a-zA-Z0-9_] para \\w ou para tratar espaços em branco [\\r\\n\\t\\f\\v ] para \\s simplificando ainda mais nossas regras.",-1),X=(0,l.Wm)("p",null,"Exemplo prático:",-1),Y={class:"q-mt-sm"},ee=(0,l.Wm)("h5",null,"Quantificadores",-1),ae=(0,l.Wm)("p",null,"Uma maneira de deixar suas regras ainda mais simples é com o uso dos quantificadores. Com eles podemos dizer quantas vezes uma mesma regra pode aparecer em sequência.",-1),te=(0,l.Wm)("ul",null,[(0,l.Wm)("li",null,"? - zero ou uma ocorrência"),(0,l.Wm)("li",null,"* - zero ou mais ocorrências"),(0,l.Wm)("li",null,"+ - uma ou mais ocorrências"),(0,l.Wm)("li",null,"{n, m} - de n até m")],-1),le=(0,l.Wm)("p",null,"Digamos que queremos pegar um documento como o cpf, que contêm muitos números e pontuações (. e -) onde a validação pode aceitar o cpf com e sem pontuação.",-1),oe=(0,l.Wm)("div",{class:"bg-grey-3 q-pa-sm q-mb-md text-black"}," const regex = /\\d{3}\\.?\\d{3}\\.?\\d{3}-?\\d{2}/ ",-1),se=(0,l.Wm)("p",null,"Exemplo prático:",-1),ne={class:"row no-wrap q-gutter-x-sm"},re={class:"q-mt-sm"},me=(0,l.Wm)("h5",null,"Âncoras",-1),ie=(0,l.Wm)("p",null,"Muitas vezes vamos precisar delimitar a ação da nossa regex. Desse modo podemos usar três metas para nos auxiliar nessa função.",-1),ue=(0,l.Wm)("p",null,"Quando queremos tratar uma palavra que em suas extremidades não possua outra letra ou palavra, usamos a shorthands \\b (Corresponde a um limite de palavras, isto é, a posição entre uma palavra e um espaço.).",-1),de=(0,l.Wm)("div",{class:"bg-grey-3 q-pa-sm q-mb-md text-black"}," const regex = /\\bpar\\b/gi ",-1),ce=(0,l.Wm)("div",{class:"bg-grey-3 q-pa-sm q-mb-md text-black"}," const regex = /\\bpar[a-z]+/gi ",-1),pe=(0,l.Wm)("p",null,"Exemplo prático:",-1),ge={class:"row no-wrap q-gutter-x-sm"},be={class:"q-mt-sm"},he=(0,l.Wm)("div",{class:"text-italic text-grey-5 q-my-sm",style:{"box-shadow":"-3px 0px 0px #e76f51"}}," Vale notar que caracteres com acentos ou - são considerados bordas. ",-1),xe=(0,l.Wm)("p",null,"Podemos lidar com o início e fim de uma linha. Usamos a meta ^ para indicar o início de uma linha e $ indicando o fim de uma linha. Algo importante a se notar é que para as âncoras funcionarem a cada quebra de linha \\n a flag m tem que estar habilitada.",-1),We=(0,l.Wm)("div",{class:"bg-grey-3 q-pa-sm q-mb-md text-black"}," const regex = /^[a-z]*\\b/gmi ",-1),fe=(0,l.Uk)(" Confira com o uso do meta $ em uma estrofe: "),ve=(0,l.Wm)("div",{class:"bg-grey-3 q-pa-sm q-mb-md text-black"}," const regex = /[a-z]+nto$/gmi ",-1),we=(0,l.Uk)(" Conseguimos tratar início e final de um texto ao mesmo tempo. veja: "),qe=(0,l.Wm)("div",{class:"bg-grey-3 q-pa-sm q-mb-md text-black"}," const regex = /^https:\\/\\/w{3}\\.[a-z]+\\.com$/gmi ",-1),Ve=(0,l.Wm)("p",null,"Exemplo prático:",-1),ye={class:"row no-wrap q-gutter-x-sm"},Ae={class:"q-mt-sm"},Ue=(0,l.Wm)("h5",null,'Grupos "( )"',-1),ke=(0,l.Wm)("p",null,"Por fim, temos os grupos que facilita ainda mais nossas regras. Eles nos possibilita a criação de regras isoladas, possibilita a criação de referencias (retrovisores) para o reuso da mesma regra em outro local dentro de uma mesmo regex e ainda cria a possibilidade de validações dentro da regex.",-1),je=(0,l.Wm)("div",{class:"bg-grey-3 q-pa-sm q-mb-md text-black"}," const regex = /(\\d{2})\\/?(\\d{2})?\\/(\\d{4})/ ",-1),Pe=(0,l.Uk)(" Podemos definir grupos que podem ser ignorados (non-capturing groups) na hora do match usando a sintaxe (?:). "),Me=(0,l.Wm)("div",{class:"bg-grey-3 q-pa-sm q-mb-md text-black"}," const regex = /([a-z]*)\\s(?:ronaldo)/gi ",-1),Qe=(0,l.Uk)(" Com os grupos podemos criar grupos aninhados (grupos dentro de grupos). "),Te=(0,l.Wm)("div",{class:"bg-grey-3 q-pa-sm q-mb-md text-black"}," const regex = /((d[io])|(co))([a-z]{2})(do)/gi ",-1),Ee=(0,l.Uk)(" Os grupos possuem grupos especiais. Como o positive lookahead (?=) e o seu oposto, negative lookahead (?!). Com o positive lookahead podemos verificar se existe um grupo a frente de uma expressão ou grupo. "),ze=(0,l.Wm)("div",{class:"bg-grey-3 q-pa-sm q-mb-md text-black"}," const regex = /([a-z]+)(?=,)/gi ",-1),Fe=(0,l.Wm)("div",{class:"bg-grey-3 q-pa-sm q-mb-md text-black"}," const regex = /([a-z]+)(?!,)\\b/gi ",-1),Ge=(0,l.Wm)("p",null,"Exemplo prático:",-1),Ie={class:"row no-wrap q-gutter-x-sm"},Le={class:"q-mt-sm"},Ce=(0,l.Wm)("section",{class:" column text-white"},[(0,l.Wm)("h5",null,"Métodos de regex no js"),(0,l.Wm)("p",null,"O objeto regex possui dois métodos: exec e test. Já com string possui 4 métodos: match, replace, search e split. Porém neste post vou me ater somente a 3 métodos: test, match e replace."),(0,l.Wm)("div",null,[(0,l.Wm)("h5",null,"test"),(0,l.Wm)("p",null,"Usado para verificar se uma regex da match com uma string. Ela retorna sempre valor boolean. Este método é ideal para fazer validações como por exemplo validar se um email, telefone ou data estão corretos."),(0,l.Wm)("iframe",{width:"100%",height:"300",src:"//jsfiddle.net/Far3ll/qh4ao68r/embedded/js/dark/",allowfullscreen:"allowfullscreen",allowpaymentrequest:"",frameborder:"0"})]),(0,l.Wm)("div",null,[(0,l.Wm)("h5",null,"match"),(0,l.Wm)("p",null,"Ele retorna um array, com as string que deram match com a regex. Se não houver valor, ele retorna null. Vejamos um exemplo procurando cep validos em um texto:"),(0,l.Wm)("iframe",{width:"100%",height:"300",src:"//jsfiddle.net/Far3ll/j7qr925c/embedded/js/dark/",allowfullscreen:"allowfullscreen",allowpaymentrequest:"",frameborder:"0"}),(0,l.Wm)("p",null,"Vejamos acima que o último número não foi pego no match, pois ele não é um cep válido.")]),(0,l.Wm)("div",null,[(0,l.Wm)("h5",null,"replace"),(0,l.Wm)("p",null,"Usado para substituir strings que deram match por uma nova string. Segue um exemplo:"),(0,l.Wm)("iframe",{width:"100%",height:"300",src:"//jsfiddle.net/Far3ll/jxdvpob4/1/embedded/js/dark/",allowfullscreen:"allowfullscreen",allowpaymentrequest:"",frameborder:"0"})])],-1);function Re(e,a,t,Re,_e,Oe){const Se=(0,l.up)("q-card-section"),Ze=(0,l.up)("q-card"),$e=(0,l.up)("q-tab"),Be=(0,l.up)("q-tabs"),De=(0,l.up)("q-input"),Je=(0,l.up)("q-select"),He=(0,l.up)("q-tab-panel"),Ke=(0,l.up)("q-tab-panels"),Ne=(0,l.up)("q-btn"),Xe=(0,l.up)("q-page-sticky"),Ye=(0,l.up)("q-page");return(0,l.wg)(),(0,l.j4)(Ye,{class:"regex column items-center"},{default:(0,l.w5)((()=>[(0,l.Wm)(Ze,{class:["regex__card text-white",Oe.isMobile]},{default:(0,l.w5)((()=>[(0,l.Wm)(Se,null,{default:(0,l.w5)((()=>[s,n,r,m,i])),_:1})])),_:1},8,["class"]),(0,l.Wm)(Be,{modelValue:_e.tab,"onUpdate:modelValue":a[1]||(a[1]=e=>_e.tab=e),dense:"",class:["text-orange-4 regex__section ",Oe.isMobile]},{default:(0,l.w5)((()=>[(0,l.Wm)($e,{name:"regex",icon:"favorite",label:"Primeiros Passos"}),(0,l.Wm)($e,{name:"javascript",icon:"code",label:"Usando no JavaScript"})])),_:1},8,["modelValue","class"]),(0,l.Wm)(Ke,{modelValue:_e.tab,"onUpdate:modelValue":a[26]||(a[26]=e=>_e.tab=e),class:["regex__panels shadow-3",Oe.isMobile]},{default:(0,l.w5)((()=>[(0,l.Wm)(He,{name:"regex"},{default:(0,l.w5)((()=>[(0,l.Wm)("section",u,[(0,l.Wm)("div",null,[d,c,p,g,b,h,x,W,(0,l.Wm)(De,{modelValue:_e.text,"onUpdate:modelValue":a[2]||(a[2]=e=>_e.text=e),type:"text",color:"white",outlined:"",dense:"",label:"Pattern: /a/","bg-color":Oe.regTestCaractere},null,8,["modelValue","bg-color"]),(0,l.Wm)("div",f,"match: "+(0,o.zw)(_e.text.match(/a/)),1),v]),(0,l.Wm)("div",null,[w,q,V,y,A,(0,l.Wm)("div",U,[(0,l.Wm)(De,{modelValue:_e.patternFlag,"onUpdate:modelValue":a[3]||(a[3]=e=>_e.patternFlag=e),type:"text",outlined:"",dense:"",label:"Pattern","bg-color":"white",class:"q-mb-sm col-9 col-sm-10"},null,8,["modelValue"]),(0,l.Wm)(Je,{modelValue:_e.flag,"onUpdate:modelValue":a[4]||(a[4]=e=>_e.flag=e),options:Oe.flagsOptions,multiple:"","map-options":"","emit-value":"",outlined:"",dense:"",label:"Flag","bg-color":"white",class:"q-mb-sm fit"},null,8,["modelValue","options"])]),(0,l.Wm)(De,{modelValue:_e.textFlag,"onUpdate:modelValue":a[5]||(a[5]=e=>_e.textFlag=e),type:Oe.inputTypeMode(this.flag),outlined:"",dense:"",label:"Pattern: /"+_e.patternFlag+"/"+_e.flag.join(""),"bg-color":Oe.regTestFlag,color:"white"},null,8,["modelValue","type","label","bg-color"]),(0,l.Wm)("div",k,"match: "+(0,o.zw)(_e.textFlag.match(Oe.match)),1)]),(0,l.Wm)("div",null,[j,P,M,Q,(0,l.Wm)(De,{modelValue:_e.textPipe,"onUpdate:modelValue":a[6]||(a[6]=e=>_e.textPipe=e),type:"text",outlined:"",dense:"",label:"Pattern: /ver|distrai/g ","bg-color":Oe.regTestPipe,color:"white"},null,8,["modelValue","bg-color"]),(0,l.Wm)("div",T,"match: "+(0,o.zw)(_e.textPipe.match(/ver|distrai/g)),1)]),(0,l.Wm)("div",null,[E,z,F,G,I,L,(0,l.Wm)("div",C,[(0,l.Wm)(De,{modelValue:_e.patternInterval,"onUpdate:modelValue":a[7]||(a[7]=e=>_e.patternInterval=e),type:"text",outlined:"",dense:"",label:"Pattern","bg-color":"white",class:"q-mb-sm col-9 col-sm-10"},null,8,["modelValue"]),(0,l.Wm)(Je,{modelValue:_e.flagInterval,"onUpdate:modelValue":a[8]||(a[8]=e=>_e.flagInterval=e),options:Oe.flagsOptions,multiple:"","map-options":"","emit-value":"",outlined:"",dense:"",label:"Flag","bg-color":"white",class:"q-mb-sm fit"},null,8,["modelValue","options"])]),(0,l.Wm)(De,{modelValue:_e.textInterval,"onUpdate:modelValue":a[9]||(a[9]=e=>_e.textInterval=e),type:Oe.inputTypeMode(this.flagInterval),outlined:"",dense:"",label:"Pattern: /"+_e.patternInterval+"/"+_e.flagInterval.join(""),"bg-color":Oe.regTestInterval,color:"white"},null,8,["modelValue","type","label","bg-color"]),(0,l.Wm)("div",R,"match "+(0,o.zw)(_e.textInterval.match(Oe.matchInterval)),1)]),(0,l.Wm)("div",null,[_,O,S,Z,$,B,(0,l.Wm)("div",D,[(0,l.Wm)(De,{modelValue:_e.patternMeta,"onUpdate:modelValue":a[10]||(a[10]=e=>_e.patternMeta=e),type:"text",outlined:"",dense:"",label:"Pattern","bg-color":"white",class:"q-mb-sm col-9 col-sm-10"},null,8,["modelValue"]),(0,l.Wm)(Je,{modelValue:_e.flagMeta,"onUpdate:modelValue":a[11]||(a[11]=e=>_e.flagMeta=e),options:Oe.flagsOptions,multiple:"","map-options":"","emit-value":"",outlined:"",dense:"",label:"Flag","bg-color":"white",class:"q-mb-sm fit"},null,8,["modelValue","options"])]),(0,l.Wm)(De,{modelValue:_e.textMeta,"onUpdate:modelValue":a[12]||(a[12]=e=>_e.textMeta=e),type:Oe.inputTypeMode(this.flagMeta),outlined:"",dense:"",label:"Pattern: /"+_e.patternMeta+"/"+_e.flagMeta.join(""),"bg-color":Oe.regTestMeta,color:"white"},null,8,["modelValue","type","label","bg-color"]),(0,l.Wm)("div",J,"match: "+(0,o.zw)(_e.textMeta.match(Oe.matchMeta)),1)]),(0,l.Wm)("div",null,[H,K,N,X,(0,l.Wm)(De,{modelValue:_e.textShort,"onUpdate:modelValue":a[13]||(a[13]=e=>_e.textShort=e),type:"text",outlined:"",dense:"",label:"Pattern: /\\w\\w\\w\\w\\w@\\w\\w\\.com/","bg-color":Oe.regTestShort,color:"white"},null,8,["modelValue","bg-color"]),(0,l.Wm)("div",Y,"match: "+(0,o.zw)(_e.textShort.match(/\w\w\w\w\w\w@\w\w\.com/)),1)]),(0,l.Wm)("div",null,[ee,ae,te,le,oe,se,(0,l.Wm)("div",ne,[(0,l.Wm)(De,{modelValue:_e.patternQuant,"onUpdate:modelValue":a[14]||(a[14]=e=>_e.patternQuant=e),type:"text",outlined:"",dense:"",label:"Pattern","bg-color":"white",class:"q-mb-sm col-9 col-sm-10"},null,8,["modelValue"]),(0,l.Wm)(Je,{modelValue:_e.flagQuant,"onUpdate:modelValue":a[15]||(a[15]=e=>_e.flagQuant=e),options:Oe.flagsOptions,multiple:"","map-options":"","emit-value":"",outlined:"",dense:"",label:"Flag","bg-color":"white",class:"q-mb-sm fit"},null,8,["modelValue","options"])]),(0,l.Wm)(De,{modelValue:_e.textQuant,"onUpdate:modelValue":a[16]||(a[16]=e=>_e.textQuant=e),type:Oe.inputTypeMode(this.flagQuant),outlined:"",dense:"",label:"Pattern: /"+_e.patternQuant+"/"+_e.flagQuant.join(""),"bg-color":Oe.regTestQuant,color:"white"},null,8,["modelValue","type","label","bg-color"]),(0,l.Wm)("div",re,"match: "+(0,o.zw)(_e.textQuant.match(Oe.matchQuant)),1)]),(0,l.Wm)("div",null,[me,ie,ue,de,ce,pe,(0,l.Wm)("div",ge,[(0,l.Wm)(De,{modelValue:_e.patternAncora,"onUpdate:modelValue":a[17]||(a[17]=e=>_e.patternAncora=e),type:"text",outlined:"",dense:"",label:"Pattern","bg-color":"white",class:"q-mb-sm col-9 col-sm-10"},null,8,["modelValue"]),(0,l.Wm)(Je,{modelValue:_e.flagAncora,"onUpdate:modelValue":a[18]||(a[18]=e=>_e.flagAncora=e),options:Oe.flagsOptions,multiple:"","map-options":"","emit-value":"",outlined:"",dense:"",label:"Flag","bg-color":"white",class:"q-mb-sm fit"},null,8,["modelValue","options"])]),(0,l.Wm)(De,{modelValue:_e.textAncora,"onUpdate:modelValue":a[19]||(a[19]=e=>_e.textAncora=e),type:Oe.inputTypeMode(this.flagAncora),outlined:"",dense:"",label:"Pattern: /"+_e.patternAncora+"/"+_e.flagAncora.join(""),"bg-color":Oe.regTestAncora,color:"white"},null,8,["modelValue","type","label","bg-color"]),(0,l.Wm)("div",be,"match: "+(0,o.zw)(_e.textAncora.match(Oe.matchAncora)),1),he,xe,We,fe,ve,we,qe,Ve,(0,l.Wm)("div",ye,[(0,l.Wm)(De,{modelValue:_e.patternAncoraLine,"onUpdate:modelValue":a[20]||(a[20]=e=>_e.patternAncoraLine=e),type:"text",outlined:"",dense:"",label:"Pattern","bg-color":"white",class:"q-mb-sm col-9 col-sm-10"},null,8,["modelValue"]),(0,l.Wm)(Je,{modelValue:_e.flagAncoraLine,"onUpdate:modelValue":a[21]||(a[21]=e=>_e.flagAncoraLine=e),options:Oe.flagsOptions,multiple:"","map-options":"","emit-value":"",outlined:"",dense:"",label:"Flag","bg-color":"white",class:"q-mb-sm fit"},null,8,["modelValue","options"])]),(0,l.Wm)(De,{modelValue:_e.textAncoraLine,"onUpdate:modelValue":a[22]||(a[22]=e=>_e.textAncoraLine=e),type:Oe.inputTypeMode(this.flagAncoraLine),outlined:"",dense:"",label:"Pattern: /"+_e.patternAncoraLine+"/"+_e.flagAncoraLine.join(""),"bg-color":Oe.regTestAncoraLine,color:"white"},null,8,["modelValue","type","label","bg-color"]),(0,l.Wm)("div",Ae,"match: "+(0,o.zw)(_e.textAncoraLine.match(Oe.matchAncoraLine)),1)]),(0,l.Wm)("div",null,[Ue,ke,je,Pe,Me,Qe,Te,Ee,ze,Fe,Ge,(0,l.Wm)("div",Ie,[(0,l.Wm)(De,{modelValue:_e.patternGroup,"onUpdate:modelValue":a[23]||(a[23]=e=>_e.patternGroup=e),type:"text",outlined:"",dense:"",label:"Pattern","bg-color":"white",class:"q-mb-sm col-9 col-sm-10"},null,8,["modelValue"]),(0,l.Wm)(Je,{modelValue:_e.flagGroup,"onUpdate:modelValue":a[24]||(a[24]=e=>_e.flagGroup=e),options:Oe.flagsOptions,multiple:"","map-options":"","emit-value":"",outlined:"",dense:"",label:"Flag","bg-color":"white",class:"q-mb-sm fit"},null,8,["modelValue","options"])]),(0,l.Wm)(De,{modelValue:_e.textGroup,"onUpdate:modelValue":a[25]||(a[25]=e=>_e.textGroup=e),type:Oe.inputTypeMode(this.flagGroup),outlined:"",dense:"",label:"Pattern: /"+_e.patternGroup+"/"+_e.flagGroup.join(""),"bg-color":Oe.regTestGroup,color:"white"},null,8,["modelValue","type","label","bg-color"]),(0,l.Wm)("div",Le,"match: "+(0,o.zw)(_e.textGroup.match(Oe.matchGroup)),1)])])])),_:1}),(0,l.Wm)(He,{name:"javascript"},{default:(0,l.w5)((()=>[Ce])),_:1})])),_:1},8,["modelValue","class"]),(0,l.Wm)(Xe,{position:"bottom-right",offset:[18,18]},{default:(0,l.w5)((()=>[(0,l.Wm)(Ne,{push:"",icon:"expand_less",color:"orange-4",onClick:Oe.toTop},null,8,["onClick"])])),_:1})])),_:1})}t(4303);const _e={data(){return{patternFlag:"",flag:[],textFlag:"",patternInterval:"",flagInterval:[],textInterval:"",patternMeta:"",flagMeta:[],textMeta:"",patternQuant:"",flagQuant:[],textQuant:"",patternAncora:"",flagAncora:[],textAncora:"",patternAncoraLine:"",flagAncoraLine:[],textAncoraLine:"",patternGroup:"",flagGroup:[],textGroup:"",regra:"",text:"",textPipe:"",textShort:"",tab:"regex"}},computed:{flagsOptions(){const e=[{label:"g",value:"g"},{label:"i",value:"i"},{label:"m",value:"m"}];return e},isMobile(){return this.$q.screen.lt.md?"fit":""},match(){const e=new RegExp(this.patternFlag,this.flag.join(""));return e},matchGroup(){const e=new RegExp(this.patternGroup,this.flagGroup.join(""));return e},matchInterval(){const e=new RegExp(this.patternInterval,this.flagInterval.join(""));return e},matchMeta(){const e=new RegExp(this.patternMeta,this.flagMeta.join(""));return e},matchQuant(){const e=new RegExp(this.patternQuant,this.flagQuant.join(""));return e},matchAncora(){const e=new RegExp(this.patternAncora,this.flagAncora.join(""));return e},matchAncoraLine(){const e=new RegExp(this.patternAncoraLine,this.flagAncoraLine.join(""));return e},regTestCaractere(){return/a/.test(this.text)?"green":"red-5"},regTestFlag(){const e=new RegExp(this.patternFlag,this.flag.join(""));return e.test(this.textFlag)?"green":"red-5"},regTestPipe(){return/ver|distrai/g.test(this.textPipe)?"green":"red-5"},regTestInterval(){const e=new RegExp(this.patternInterval,this.flagInterval.join(""));return e.test(this.textInterval)?"green":"red-5"},regTestMeta(){const e=new RegExp(this.patternMeta,this.flagMeta.join(""));return e.test(this.textMeta)?"green":"red-5"},regTestShort(){return/\w\w\w\w\w\w@\w\w\.com/.test(this.textShort)?"green":"red-5"},regTestQuant(){const e=new RegExp(this.patternQuant,this.flagQuant.join(""));return e.test(this.textQuant)?"green":"red-5"},regTestAncora(){const e=new RegExp(this.patternAncora,this.flagAncora.join(""));return e.test(this.textAncora)?"green":"red-5"},regTestAncoraLine(){const e=new RegExp(this.patternAncoraLine,this.flagAncoraLine.join(""));return e.test(this.textAncoraLine)?"green":"red-5"},regTestGroup(){const e=new RegExp(this.patternGroup,this.flagGroup.join(""));return e.test(this.textGroup)?"green":"red-5"}},methods:{inputTypeMode(e){const a=/m/;return a.test(e)?"textarea":"text"},toTop(){window.scrollTo({top:0,behavior:"smooth"})}}};var Oe=t(4379),Se=t(151),Ze=t(5589),$e=t(7547),Be=t(3269),De=t(5906),Je=t(6602),He=t(4842),Ke=t(8605),Ne=t(1007),Xe=t(4607),Ye=t(7518),ea=t.n(Ye);_e.render=Re;const aa=_e;ea()(_e,"components",{QPage:Oe.Z,QCard:Se.Z,QCardSection:Ze.Z,QTabs:$e.Z,QTab:Be.Z,QTabPanels:De.Z,QTabPanel:Je.Z,QInput:He.Z,QSelect:Ke.Z,QPageSticky:Ne.Z,QBtn:Xe.Z})}}]);